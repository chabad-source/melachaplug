#--------------------------------------------
#-------------- Location Info ---------------
#--------------------------------------------
esphome:
  on_boot:
    - priority: -100.0                   # pretty much everything should already be initialized
      then:
        - logger.log: "--- Waiting for hdate to be valid  ---"
        - wait_until:
            lambda: 'return id(hdate_valid);'
        - logger.log: --------- hdate valid ---------"
        - lambda: 'LocationExtras::onBoot(${latitude}, ${longitude});'

# Enable HTTP Requests (for auto location API)
http_request:
  useragent: esphome/device
  timeout: 10s
  verify_ssl: false

text_sensor:
  # text sensor to display the location 
  - platform: template
    name: 12 Location Info
    internal: true
    id: location_info
    update_interval: never

number:
  - platform: template
    name: 13 Set Latitude
    id: latitude_number
    optimistic: true
    min_value: -180.0000
    max_value: 180.0000
    step: .0001
    mode: box
    restore_value: true
    initial_value: ${latitude}
    on_value:
      - lambda: 'LocationExtras::onLatitudeSet();'
  - platform: template
    name: 14 Set Longitude
    id: longitude_number
    optimistic: true
    min_value: -180.0000
    max_value: 180.0000
    step: .0001
    mode: box
    restore_value: true
    initial_value: ${longitude}
    on_value:
      - lambda: 'LocationExtras::onLongitudeSet();'

button:
  - platform: template
    name: 15 Detect Location
    on_press:
      - lambda: 'LocationExtras::detectLocation();'
  - platform: template
    name: 16 Revert to Default Location
    on_press:
      - lambda: 'LocationExtras::revertToDefaultLocation(${latitude}, ${longitude});'
